import tkinter as tk
from tkinter import messagebox
import random
import string

# Function to generate password
def generate_password():
    # Get the user-specified length of the password
    length = int(length_entry.get())
    
    # Options for password complexity
    use_upper = upper_var.get()
    use_lower = lower_var.get()
    use_digits = digits_var.get()
    use_symbols = symbols_var.get()
    
    # Initialize possible characters
    characters = ''
    
    # Add selected character types
    if use_upper:
        characters += string.ascii_uppercase
    if use_lower:
        characters += string.ascii_lowercase
    if use_digits:
        characters += string.digits
    if use_symbols:
        characters += string.punctuation
    
    if not characters:
        messagebox.showerror("Input Error", "Select at least one option for password complexity.")
        return
    
    # Generate password by randomly selecting from the available characters
    password = ''.join(random.choice(characters) for _ in range(length))
    
    # Display the generated password
    result_label.config(text=f"Generated Password: {password}")

# Setting up the GUI window
root = tk.Tk()
root.title("Password Generator")
root.geometry("400x300")

# Label and input field for password length
tk.Label(root, text="Enter password length:").pack(pady=5)
length_entry = tk.Entry(root)
length_entry.pack(pady=5)
length_entry.insert(0, "8")  # Default value

# Checkboxes for password complexity options
upper_var = tk.IntVar()
lower_var = tk.IntVar()
digits_var = tk.IntVar()
symbols_var = tk.IntVar()

tk.Checkbutton(root, text="Include Uppercase Letters", variable=upper_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Lowercase Letters", variable=lower_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Digits", variable=digits_var).pack(anchor='w')
tk.Checkbutton(root, text="Include Symbols", variable=symbols_var).pack(anchor='w')

# Button to generate password
tk.Button(root, text="Generate Password", command=generate_password).pack(pady=20)

# Label to display the generated password
result_label = tk.Label(root, text="", font=("Helvetica", 12))
result_label.pack(pady=10)

# Start the GUI event loop
root.mainloop()


